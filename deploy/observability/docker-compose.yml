version: "3.9"

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otelcol/otel-collector-config.yaml"]
    environment:
      - ENVIRONMENT=dev
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC (traces/metrics/logs in)
      - "4318:4318"   # OTLP HTTP (opcional)
      - "8889:8889"   # /metrics del collector para Prometheus
    depends_on:
      - tempo
    networks: [observability]

  tempo:
    image: grafana/tempo:latest
    user: "0:0"
    command: ["-config.file=/etc/tempo/tempo.yaml"]
    volumes:
      - ./tempo.yaml:/etc/tempo/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    ports:
      - "3200:3200"   # API para Grafana
    networks: [observability]

  prometheus:
    image: prom/prometheus:latest
    command: ["--config.file=/etc/prometheus/prometheus.yml","--storage.tsdb.retention.time=15d"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector
    networks: [observability]

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      # No necesitas plugins para Tempo/Prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - prometheus
    networks: [observability]
  loki:
    image: grafana/loki:2.9.8
    command: ["-config.file=/etc/loki/loki-config.yaml"]
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - ./data/loki:/loki
    ports:
      - "3100:3100"
    networks: [observability]

  promtail:
    image: grafana/promtail:2.9.8
    command: ["-config.file=/etc/promtail/promtail-config.yaml"]
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
      # Montamos la carpeta de logs del host (donde tu micro escribe)
      - ./logs:/var/log/hostapp:ro
      # (opcional) si quieres scrapear logs de contenedores:
      # - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - loki
    networks: [observability]

networks:
  observability: {}

volumes:
  grafana-data:
  tempo-data:
  prometheus-data:
